name: Build and Test (Production)

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      YTCLIPPER_YT_DLP_PROXY: ${{ secrets.YTDLP_PROXY_URL }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set Up Go
      uses: actions/setup-go@v4
      with:
        go-version: stable

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y make python3 python3-pip ffmpeg google-chrome-stable
        python3 -m pip install --upgrade pip yt-dlp requests curl_cffi
        go mod tidy

    - name: Debug Proxy Environment Variable
      run: echo "Proxy set to $YTCLIPPER_YT_DLP_PROXY"

    - name: Verify Dependencies
      run: |
        which ffmpeg && ffmpeg -version
        which yt-dlp && yt-dlp --version
        which google-chrome && google-chrome --version
        python3 -m pip show requests curl_cffi
        yt-dlp --proxy ${{ secrets.YTDLP_PROXY_URL }} https://www.youtube.com/watch?v=dQw4w9WgXcQ --simulate
        go version

    - name: Test YouTube Accessibility
      run: curl -I https://www.youtube.com

    - name: Start Server
      run: |
        nohup go run main.go > server.log 2>&1 &

    - name: Wait for Server
      run: |
        for i in {1..30}; do
        curl -s http://localhost:8080/health && break || sleep 3
        done

    - name: Run E2E Tests
      run: go run -v test/e2e.go
      timeout-minutes: 10 

    - name: Output Server Logs
      if: always()
      run: cat server.log

    - name: Stop Server
      run: |
        pkill -f "go run main.go"

    - name: Run Build-Prod
      run: make build-prod

    - name: Trigger CapRover Deployment
      if: success() # Runs only if the build and tests succeed
      run: |
        curl -X POST "https://captain.mormor.online/api/v2/user/apps/webhooks/triggerbuild?namespace=captain&token=${{ secrets.CAPROVER_WEBHOOK_TOKEN }}"
